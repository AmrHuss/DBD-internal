#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Objectives_HookCount

#include "Basic.hpp"

#include "WBP_Objectives_HookCount_classes.hpp"
#include "WBP_Objectives_HookCount_parameters.hpp"


namespace SDK
{

// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.UpdateVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Objectives_HookCount_C::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "UpdateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.shouldPlayAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32&                                  currentHookCount                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32&                                  maxHookCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Objectives_HookCount_C::shouldPlayAnimation(int32& currentHookCount, int32& maxHookCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "shouldPlayAnimation");

	Params::WBP_Objectives_HookCount_C_shouldPlayAnimation Parms{};

	Parms.currentHookCount = currentHookCount;
	Parms.maxHookCount = maxHookCount;

	UObject::ProcessEvent(Func, &Parms);

	currentHookCount = Parms.currentHookCount;
	maxHookCount = Parms.maxHookCount;
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.SetupSingleHookCounter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Objectives_HookCount_C::SetupSingleHookCounter(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "SetupSingleHookCounter");

	Params::WBP_Objectives_HookCount_C_SetupSingleHookCounter Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.SetMainIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameType                               gameType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Objectives_HookCount_C::SetMainIcon(EGameType gameType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "SetMainIcon");

	Params::WBP_Objectives_HookCount_C_SetMainIcon Parms{};

	Parms.gameType = gameType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.SetHookCountVisibility
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Objectives_HookCount_C::SetHookCountVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "SetHookCountVisibility");

	Params::WBP_Objectives_HookCount_C_SetHookCountVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.SetData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             currentHookCount                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             maxHookCount                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             initialMaxHookCount                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TSet<int32>&                      assistedHookIndices                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const bool                              isFinisherMoriAvailable                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Objectives_HookCount_C::SetData(const int32 currentHookCount, const int32 maxHookCount, const int32 initialMaxHookCount, const TSet<int32>& assistedHookIndices, const bool isFinisherMoriAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "SetData");

	Params::WBP_Objectives_HookCount_C_SetData Parms{};

	Parms.currentHookCount = currentHookCount;
	Parms.maxHookCount = maxHookCount;
	Parms.initialMaxHookCount = initialMaxHookCount;
	Parms.assistedHookIndices = std::move(assistedHookIndices);
	Parms.isFinisherMoriAvailable = isFinisherMoriAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Objectives_HookCount_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "PreConstruct");

	Params::WBP_Objectives_HookCount_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.InitWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const EGameType                         gameType                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             numberOfSegments                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Objectives_HookCount_C::InitWidget(const EGameType gameType, const int32 numberOfSegments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "InitWidget");

	Params::WBP_Objectives_HookCount_C_InitWidget Parms{};

	Parms.gameType = gameType;
	Parms.numberOfSegments = numberOfSegments;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.HideUnusedHookCounters
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Objectives_HookCount_C::HideUnusedHookCounters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "HideUnusedHookCounters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.ExecuteUbergraph_WBP_Objectives_HookCount
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Objectives_HookCount_C::ExecuteUbergraph_WBP_Objectives_HookCount(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "ExecuteUbergraph_WBP_Objectives_HookCount");

	Params::WBP_Objectives_HookCount_C_ExecuteUbergraph_WBP_Objectives_HookCount Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.EvaluateSingleHookCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_CoreSingleHookCount_C*       currentSingleHook                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentHooks                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxHooks_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InitMaxHooks                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TSet<int32>&                      assistedHookIndices                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_Objectives_HookCount_C::EvaluateSingleHookCount(int32 Index_0, class UWBP_CoreSingleHookCount_C* currentSingleHook, int32 CurrentHooks, int32 MaxHooks_0, int32 InitMaxHooks, const TSet<int32>& assistedHookIndices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "EvaluateSingleHookCount");

	Params::WBP_Objectives_HookCount_C_EvaluateSingleHookCount Parms{};

	Parms.Index_0 = Index_0;
	Parms.currentSingleHook = currentSingleHook;
	Parms.CurrentHooks = CurrentHooks;
	Parms.MaxHooks_0 = MaxHooks_0;
	Parms.InitMaxHooks = InitMaxHooks;
	Parms.assistedHookIndices = std::move(assistedHookIndices);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Objectives_HookCount.WBP_Objectives_HookCount_C.ClearData
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Objectives_HookCount_C::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Objectives_HookCount_C", "ClearData");

	UObject::ProcessEvent(Func, nullptr);
}

}

