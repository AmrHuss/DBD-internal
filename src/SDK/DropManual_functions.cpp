#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DropManual

#include "Basic.hpp"

#include "DropManual_classes.hpp"
#include "DropManual_parameters.hpp"


namespace SDK
{

// Function DropManual.DropManual_C.AuthorityApplyDropPenalty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UDropManual_C::AuthorityApplyDropPenalty(class ADBDPlayer* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "AuthorityApplyDropPenalty");

	Params::DropManual_C_AuthorityApplyDropPenalty Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DropManual.DropManual_C.ExecuteUbergraph_DropManual
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDropManual_C::ExecuteUbergraph_DropManual(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "ExecuteUbergraph_DropManual");

	Params::DropManual_C_ExecuteUbergraph_DropManual Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DropManual.DropManual_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivor*                        Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UDropManual_C::Initialize(class ASurvivor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "Initialize");

	Params::DropManual_C_Initialize Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DropManual.DropManual_C.OnInteractionExitStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UDropManual_C::OnInteractionExitStart(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "OnInteractionExitStart");

	Params::DropManual_C_OnInteractionExitStart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DropManual.DropManual_C.OnPickedUpEnd_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       picker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UDropManual_C::OnPickedUpEnd_Event(class ADBDPlayer* picker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "OnPickedUpEnd_Event");

	Params::DropManual_C_OnPickedUpEnd_Event Parms{};

	Parms.picker = picker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DropManual.DropManual_C.OnPickUpDelayDone
// (BlueprintCallable, BlueprintEvent)

void UDropManual_C::OnPickUpDelayDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "OnPickUpDelayDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DropManual.DropManual_C.IsBeingCaughtInTrap
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsCaught                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDropManual_C::IsBeingCaughtInTrap(class ADBDPlayer* Player, bool* IsCaught) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "IsBeingCaughtInTrap");

	Params::DropManual_C_IsBeingCaughtInTrap Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (IsCaught != nullptr)
		*IsCaught = Parms.IsCaught;
}


// Function DropManual.DropManual_C.IsInteractionPossibleBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInputInteractionType                   interactionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UDropManual_C::IsInteractionPossibleBP(const class ADBDPlayer* Player, EInputInteractionType interactionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "IsInteractionPossibleBP");

	Params::DropManual_C_IsInteractionPossibleBP Parms{};

	Parms.Player = Player;
	Parms.interactionType = interactionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DropManual.DropManual_C.IsInteractionPossibleClient
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInputInteractionType                   interactionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UDropManual_C::IsInteractionPossibleClient(const class ADBDPlayer* Player, EInputInteractionType interactionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropManual_C", "IsInteractionPossibleClient");

	Params::DropManual_C_IsInteractionPossibleClient Parms{};

	Parms.Player = Player;
	Parms.interactionType = interactionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

