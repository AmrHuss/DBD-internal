#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GraphicsExtensions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GraphicsExtensions_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.GetTileCountX
// 0x0004 (0x0004 - 0x0000)
struct GMAdaptiveShadowMapControllerComponent_GetTileCountX final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.GetTileCountY
// 0x0004 (0x0004 - 0x0000)
struct GMAdaptiveShadowMapControllerComponent_GetTileCountY final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.GetTileSize
// 0x0004 (0x0004 - 0x0000)
struct GMAdaptiveShadowMapControllerComponent_GetTileSize final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.IsControllerDonePreallocatingTiles
// 0x0001 (0x0001 - 0x0000)
struct GMAdaptiveShadowMapControllerComponent_IsControllerDonePreallocatingTiles final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GraphicsExtensions.GMAdaptiveShadowMapSourceComponent.SetLightRadiusWithBounds
// 0x0020 (0x0020 - 0x0000)
struct GMAdaptiveShadowMapSourceComponent_SetLightRadiusWithBounds final
{
public:
	struct FVector                                BoundingSphereCenter;                              // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoundingSphereRadius;                              // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GraphicsExtensions.GMAmbianceManager.AddAmbiance
// 0x0028 (0x0028 - 0x0000)
struct GMAmbianceManager_AddAmbiance final
{
public:
	class UAmbianceManagerDataAsset*              assetToLoad;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          overrideTransition;                                // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            Curve;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0018(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GraphicsExtensions.GMAmbianceManager.ApplyAmbiance
// 0x0970 (0x0970 - 0x0000)
struct GMAmbianceManager_ApplyAmbiance final
{
public:
	struct FAmbianceManagerParams                 newAmbiance;                                       // 0x0000(0x0970)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GraphicsExtensions.GMAmbianceManager.InitializeManager
// 0x0008 (0x0008 - 0x0000)
struct GMAmbianceManager_InitializeManager final
{
public:
	class UDataTable*                             inPriorityTable;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GraphicsExtensions.GMAmbianceManager.RemoveAmbiance
// 0x0018 (0x0018 - 0x0000)
struct GMAmbianceManager_RemoveAmbiance final
{
public:
	const class UAmbianceManagerDataAsset*        assetToLoad;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          overrideTransition;                                // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            Curve;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GraphicsExtensions.GMAmbianceManager.IsManagerInitialized
// 0x0001 (0x0001 - 0x0000)
struct GMAmbianceManager_IsManagerInitialized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

