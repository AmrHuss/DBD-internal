#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GFXUtilities

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GFXUtilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GFXUtilities.BatchMeshCommands.AddGroup
// 0x0020 (0x0020 - 0x0000)
struct BatchMeshCommands_AddGroup final
{
public:
	struct FMaterialNamedGroup                    Group;                                             // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.BatchSetComponentTickEnabled
// 0x0001 (0x0001 - 0x0000)
struct BatchMeshCommands_BatchSetComponentTickEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.BatchSetSkipComponentAndChildrenTransformUpdate
// 0x0001 (0x0001 - 0x0000)
struct BatchMeshCommands_BatchSetSkipComponentAndChildrenTransformUpdate final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.BatchSetVisibility
// 0x0002 (0x0002 - 0x0000)
struct BatchMeshCommands_BatchSetVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPropagateToChildren;                              // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.CopyFirstScalarParameter
// 0x0014 (0x0014 - 0x0000)
struct BatchMeshCommands_CopyFirstScalarParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutValue;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GFXUtilities.BatchMeshCommands.SetAllToSameMaterial
// 0x0008 (0x0008 - 0x0000)
struct BatchMeshCommands_SetAllToSameMaterial final
{
public:
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetCastCinematicShadows
// 0x0001 (0x0001 - 0x0000)
struct BatchMeshCommands_SetCastCinematicShadows final
{
public:
	bool                                          castCinematicShadows;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetColourParameter
// 0x001C (0x001C - 0x0000)
struct BatchMeshCommands_SetColourParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           NewValue;                                          // 0x000C(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetCustomDepthStencilValue
// 0x0004 (0x0004 - 0x0000)
struct BatchMeshCommands_SetCustomDepthStencilValue final
{
public:
	int32                                         stencilValue;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetLightingChannelForAllMeshes
// 0x0001 (0x0001 - 0x0000)
struct BatchMeshCommands_SetLightingChannelForAllMeshes final
{
public:
	struct FLightingChannels                      LightingChannels;                                  // 0x0000(0x0001)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetMaterial
// 0x0010 (0x0010 - 0x0000)
struct BatchMeshCommands_SetMaterial final
{
public:
	class FString                                 GroupName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetReceivesDecals
// 0x0001 (0x0001 - 0x0000)
struct BatchMeshCommands_SetReceivesDecals final
{
public:
	bool                                          receivesDecals;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetRenderInCustomColourNoDepth
// 0x0001 (0x0001 - 0x0000)
struct BatchMeshCommands_SetRenderInCustomColourNoDepth final
{
public:
	bool                                          renderInCustomColour;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetRenderInCustomDepth
// 0x0001 (0x0001 - 0x0000)
struct BatchMeshCommands_SetRenderInCustomDepth final
{
public:
	bool                                          renderInCustomDepth;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetRenderInMainPass
// 0x0001 (0x0001 - 0x0000)
struct BatchMeshCommands_SetRenderInMainPass final
{
public:
	bool                                          inRenderInMainPass;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetScalarParameter
// 0x0010 (0x0010 - 0x0000)
struct BatchMeshCommands_SetScalarParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewValue;                                          // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetStencilIntegerScalarParameter
// 0x0010 (0x0010 - 0x0000)
struct BatchMeshCommands_SetStencilIntegerScalarParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewValue;                                          // 0x000C(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetTextureParameter
// 0x0018 (0x0018 - 0x0000)
struct BatchMeshCommands_SetTextureParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               newTexture;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.BatchMeshCommands.SetVectorParameter
// 0x0028 (0x0028 - 0x0000)
struct BatchMeshCommands_SetVectorParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewValue;                                          // 0x0010(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.ClippableProviderComponent.AddIgnoredPrimitives
// 0x0010 (0x0010 - 0x0000)
struct ClippableProviderComponent_AddIgnoredPrimitives final
{
public:
	TArray<class UPrimitiveComponent*>            ignoredPrimitives;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.ClippableProviderComponent.SetIgnoredPrimitives
// 0x0010 (0x0010 - 0x0000)
struct ClippableProviderComponent_SetIgnoredPrimitives final
{
public:
	TArray<class UPrimitiveComponent*>            ignoredPrimitives;                                 // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.DBDReflectionCaptureSpawnerComponent.SetBrightness
// 0x0004 (0x0004 - 0x0000)
struct DBDReflectionCaptureSpawnerComponent_SetBrightness final
{
public:
	float                                         Brightness_0;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.DBDReflectionCaptureSpawnerComponent.SetContributionFactor
// 0x0004 (0x0004 - 0x0000)
struct DBDReflectionCaptureSpawnerComponent_SetContributionFactor final
{
public:
	float                                         ContributionFactor_0;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.DBDReflectionCaptureSpawnerComponent.SetIBLMultiplicator
// 0x0004 (0x0004 - 0x0000)
struct DBDReflectionCaptureSpawnerComponent_SetIBLMultiplicator final
{
public:
	float                                         IBLMultiplicator_0;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.GFXUtilities.ActivateVFX
// 0x0010 (0x0010 - 0x0000)
struct GFXUtilities_ActivateVFX final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Active;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GFXUtilities.LightIntensityTimelineComponent.AddLight
// 0x0010 (0x0010 - 0x0000)
struct LightIntensityTimelineComponent_AddLight final
{
public:
	class ULightComponent*                        Light;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Multiplier;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GFXUtilities.LightIntensityTimelineComponent.AddMaterialHelper
// 0x0018 (0x0018 - 0x0000)
struct LightIntensityTimelineComponent_AddMaterialHelper final
{
public:
	class UMaterialHelper*                        matHelper;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   propName;                                          // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Multiplier;                                        // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.LightIntensityTimelineComponent.SetLightCurve
// 0x0008 (0x0008 - 0x0000)
struct LightIntensityTimelineComponent_SetLightCurve final
{
public:
	class UCurveFloat*                            lightcurve;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.LightIntensityTimelineComponent.SetMaxLength
// 0x0004 (0x0004 - 0x0000)
struct LightIntensityTimelineComponent_SetMaxLength final
{
public:
	float                                         newMaxValue;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.LightIntensityTimelineComponent.SetMinLength
// 0x0004 (0x0004 - 0x0000)
struct LightIntensityTimelineComponent_SetMinLength final
{
public:
	float                                         newMinValue;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.LightIntensityTimelineComponent.SetRandomizeLength
// 0x0001 (0x0001 - 0x0000)
struct LightIntensityTimelineComponent_SetRandomizeLength final
{
public:
	bool                                          isRandom;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.MaterialHelper.SetSceneComponentVisibility
// 0x0010 (0x0010 - 0x0000)
struct MaterialHelper_SetSceneComponentVisibility final
{
public:
	class USceneComponent*                        InSceneComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          newVisibility;                                     // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          propagateToChildren;                               // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GFXUtilities.MaterialHelper.RefreshMesh
// 0x0008 (0x0008 - 0x0000)
struct MaterialHelper_RefreshMesh final
{
public:
	class UMeshComponent*                         mc;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.AsyncAction_OverrideMaterial.AsyncOverrideMaterial
// 0x0028 (0x0028 - 0x0000)
struct AsyncAction_OverrideMaterial_AsyncOverrideMaterial final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Group;                                             // 0x0010(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMaterialOverridePriority                     Priority;                                          // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          copyPhysicalMaterial;                              // 0x001D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_OverrideMaterial*          ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.MaterialOverrideSubsystem.AddNewVariantPairToLibrary
// 0x0080 (0x0080 - 0x0000)
struct MaterialOverrideSubsystem_AddNewVariantPairToLibrary final
{
public:
	struct FGameplayTag                           VariantName;                                       // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      src;                                               // 0x0010(0x0038)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      dst;                                               // 0x0048(0x0038)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.MaterialOverrideSubsystem.RemoveMaterialVariantOverride
// 0x0018 (0x0018 - 0x0000)
struct MaterialOverrideSubsystem_RemoveMaterialVariantOverride final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           VariantName;                                       // 0x0008(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GFXUtilities.MaterialOverrideSubsystem.RemoveVariantsWithNameFromLibrary
// 0x000C (0x000C - 0x0000)
struct MaterialOverrideSubsystem_RemoveVariantsWithNameFromLibrary final
{
public:
	struct FGameplayTag                           VariantName;                                       // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.MaterialOverrideSubsystem.SetOverrideMaterials
// 0x0018 (0x0018 - 0x0000)
struct MaterialOverrideSubsystem_SetOverrideMaterials final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           VariantName;                                       // 0x0008(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMaterialOverridePriority                     Priority;                                          // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GFXUtilities.MaterialOverrideSubsystem.SetOverrideMaterialsAdvanced
// 0x0020 (0x0020 - 0x0000)
struct MaterialOverrideSubsystem_SetOverrideMaterialsAdvanced final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           VariantName;                                       // 0x0008(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCopyPhysicalMaterial;                             // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMaterialOverridePriority                     Priority;                                          // 0x0015(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMaterialOverrideParameterCopyType            parameterCopyType;                                 // 0x0016(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         recursionLimit;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GFXUtilities.OuterlineComponent.SetIntensity
// 0x0004 (0x0004 - 0x0000)
struct OuterlineComponent_SetIntensity final
{
public:
	float                                         Intensity;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GFXUtilities.StencilOutlineRenderStrategy.EnableCopyStencilToCustomStencil
// 0x0001 (0x0001 - 0x0000)
struct StencilOutlineRenderStrategy_EnableCopyStencilToCustomStencil final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

