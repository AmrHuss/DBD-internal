#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK23

#include "Basic.hpp"

#include "DataTableUtilities_structs.hpp"
#include "AnimationUtilities_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "StatSystem_structs.hpp"
#include "DBDCosmetic_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"
#include "DBDCompetence_classes.hpp"
#include "GameplayUtilities_classes.hpp"
#include "Competence_classes.hpp"
#include "DBDInteraction_classes.hpp"
#include "DBDAnimation_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class TheK23.ActivateSuperMode
// 0x0070 (0x07E0 - 0x0770)
class UActivateSuperMode final : public UInteractionDefinition
{
public:
	uint8                                         Pad_768[0x8];                                      // 0x0768(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimationMontageDescriptor            _activationMontage;                                // 0x0770(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _activationDuration;                               // 0x0790(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _confirmationChargeDuration;                       // 0x07B8(0x0028)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActivateSuperMode">();
	}
	static class UActivateSuperMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivateSuperMode>();
	}
};

// Class TheK23.FlurryComboScoreComponent
// 0x0168 (0x0220 - 0x00B8)
class UFlurryComboScoreComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x1C];                                      // 0x00B8(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _comboScore;                                       // 0x00D4(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _timeAddedByComboRank;                             // 0x00D8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _timeForCombo;                                     // 0x0100(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _consecutiveHitsRequiredScore;                     // 0x0180(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<float>                                 _thresholds;                                       // 0x01A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<float>                                 _thresholdsScoreForAudio;                          // 0x01B8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTag>                   _comboScoreEvents;                                 // 0x01C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D8[0x40];                                     // 0x01D8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _comboExtendSuperModeStatusEffectClass;            // 0x0218(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRep_ComboScore() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FlurryComboScoreComponent">();
	}
	static class UFlurryComboScoreComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFlurryComboScoreComponent>();
	}
};

// Class TheK23.FlurryOfKnives
// 0x0550 (0x0E10 - 0x08C0)
class UFlurryOfKnives final : public UChargeableInteractionDefinition
{
public:
	uint8                                         Pad_8C0[0x48];                                     // 0x08C0(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _replicatedNumOfStacksReduction;                   // 0x0908(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isSuperModeThrow;                                 // 0x090C(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_90D[0x8B];                                     // 0x090D(0x008B)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatusEffect*                          _selfSlowEffect;                                   // 0x0998(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _selfSlowStatusEffectClass;                        // 0x09A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _flurryOfKnivesEnterDuration;                      // 0x09A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _flurryOfKnivesExitDuration;                       // 0x09D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _chargeTime;                                       // 0x09F8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _baseTimeBetweenThrows;                            // 0x0A20(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _throwRateModifierByKnivesThrown;                  // 0x0AA0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _superModeDeactivationBuffer;                      // 0x0AA8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _superModeThrowRateModifier;                       // 0x0AD0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _knivesLaunchSpeed;                                // 0x0AF8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _convergencePointDistance;                         // 0x0B20(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _coneOfFireAngleCurve;                             // 0x0B48(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _consecutiveKnivesStacksDecayTime;                 // 0x0B50(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _maxConsecutiveKnivesStacks;                       // 0x0B78(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _movementSpeedByKnivesThrown;                      // 0x0BA0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _superModeBaseMovementSpeed;                       // 0x0BA8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _baseWalkSpeed;                                    // 0x0BD0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _recoilIntensityByKnivesThrown;                    // 0x0BF8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _recoilDuration;                                   // 0x0C00(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _recoilAngle;                                      // 0x0C28(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _maximumRecoilAngleVariation;                      // 0x0C50(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _rotationSpeedAdjustmentTime;                      // 0x0C78(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _aimingStanceRotationYawScaleAdjustment;           // 0x0CA0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _aimingStanceRotationPitchScaleAdjustment;         // 0x0CC8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _throwingRotationYawScaleAdjustment;               // 0x0CF0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _throwingRotationPitchScaleAdjustment;             // 0x0D18(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _aimingStanceGamepadRotationYawScaleAdjustment;    // 0x0D40(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _aimingStanceGamepadRotationPitchScaleAdjustment;  // 0x0D68(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _throwingGamepadRotationYawScaleAdjustment;        // 0x0D90(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _throwingGamepadRotationPitchScaleAdjustment;      // 0x0DB8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _aimingGamepadPitchCurve;                          // 0x0DE0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _aimingGamepadYawCurve;                            // 0x0DE8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _throwingGamepadPitchCurve;                        // 0x0DF0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _throwingGamepadYawCurve;                          // 0x0DF8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E00[0x10];                                     // 0x0E00(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_StartThrowing();
	void OnRep_NumOfStacksReduction();
	void Server_DecreaseConsecutiveKnivesStacks();
	void Server_StartThrowing();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FlurryOfKnives">();
	}
	static class UFlurryOfKnives* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFlurryOfKnives>();
	}
};

// Class TheK23.HexCrowdControl
// 0x0020 (0x0500 - 0x04E0)
class UHexCrowdControl final : public UHexPerk
{
public:
	int32                                         _maxNumVaultsBlocked[0x3];                         // 0x04E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TWeakObjectPtr<class AWindow>>         _authority_blockedVaults;                          // 0x04F0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HexCrowdControl">();
	}
	static class UHexCrowdControl* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHexCrowdControl>();
	}
};

// Class TheK23.TricksterChainedThrowsAddon
// 0x0008 (0x0308 - 0x0300)
class UTricksterChainedThrowsAddon : public UItemAddon
{
public:
	int32                                         _consecutiveHits;                                  // 0x0300(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _resetOnEnteringFlurryInteraction;                 // 0x0304(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_ConsecutiveHits();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TricksterChainedThrowsAddon">();
	}
	static class UTricksterChainedThrowsAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTricksterChainedThrowsAddon>();
	}
};

// Class TheK23.IridescentPhotocardAddon
// 0x0008 (0x0310 - 0x0308)
class UIridescentPhotocardAddon final : public UTricksterChainedThrowsAddon
{
public:
	float                                         _percentageGainedOnHit;                            // 0x0308(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _maxConsecutiveHits;                               // 0x030C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IridescentPhotocardAddon">();
	}
	static class UIridescentPhotocardAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIridescentPhotocardAddon>();
	}
};

// Class TheK23.K23PowerProgressPresentationComponent
// 0x0000 (0x00C0 - 0x00C0)
class UK23PowerProgressPresentationComponent final : public UPresentationItemProgressComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K23PowerProgressPresentationComponent">();
	}
	static class UK23PowerProgressPresentationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK23PowerProgressPresentationComponent>();
	}
};

// Class TheK23.K23SurvivorCosmeticHelperActor
// 0x0018 (0x0370 - 0x0358)
class AK23SurvivorCosmeticHelperActor final : public ASurvivorCosmeticHelperActor
{
public:
	uint8                                         Pad_358[0x18];                                     // 0x0358(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_K23CamperHitByKnife(float lacerationPercentage);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K23SurvivorCosmeticHelperActor">();
	}
	static class AK23SurvivorCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK23SurvivorCosmeticHelperActor>();
	}
};

// Class TheK23.KnifeProjectile
// 0x00F0 (0x04C8 - 0x03D8)
class AKnifeProjectile final : public AKillerProjectile
{
public:
	class UPrimitiveComponent*                    _worldCollider;                                    // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                    _camperDetector;                                   // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E8[0x10];                                     // 0x03E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ADBDPlayer*>                       _playersAffectedThisThrow;                         // 0x03F8(0x0050)(NativeAccessSpecifierPrivate)
	class UPoolableProjectileComponent*           _poolableActorComponent;                           // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _knifeMaxRange;                                    // 0x0450(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _addonExplosionRadius;                             // 0x0478(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _numberOfAddonBounces;                             // 0x04A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void BP_CosmeticOnAddonExplosion(const struct FVector& Location, const struct FVector& Normal);
	void BP_OnLaunchCosmetic(const struct FLaunchInfo& LaunchInfo, bool hasImpactOnLaunch);
	void BP_SetKnifeActive(bool Active);
	void OnProjectileBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void OnWorldColliderHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void SetKnifeAcquired(bool acquired);

	float GetAddonExplosionRadius() const;
	bool KnifeCanPierceCampers() const;
	bool ShouldPlayRicochetSound() const;
	bool WasLaunchedDuringSuperMode() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KnifeProjectile">();
	}
	static class AKnifeProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKnifeProjectile>();
	}
};

// Class TheK23.KnifeRack
// 0x0000 (0x02C8 - 0x02C8)
class AKnifeRack final : public ABaseLockerItem
{
public:
	void OnReloadEnded(class ADBDPlayer* Player);
	void OnReloadMontageStarted(float actionSpeedMultiplier, class ADBDPlayer* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KnifeRack">();
	}
	static class AKnifeRack* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKnifeRack>();
	}
};

// Class TheK23.KnivesLauncher
// 0x0108 (0x02B0 - 0x01A8)
class UKnivesLauncher final : public UKillerProjectileLauncher
{
public:
	struct FDBDTunableRowHandle                   _knifeSpawnOffset;                                 // 0x01A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _knifeSpawnForwardOffset;                          // 0x01D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _launchSpeed;                                      // 0x01F8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _maxAmmoTunable;                                   // 0x0220(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A0[0x8];                                      // 0x02A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _isInSuperModeThrow;                               // 0x02A8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetLocallyPredictedAmmo() const;
	class AThrowingKnives* GetPower() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KnivesLauncher">();
	}
	static class UKnivesLauncher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKnivesLauncher>();
	}
};

// Class TheK23.KnivesProvider
// 0x0008 (0x0120 - 0x0118)
class UKnivesProvider final : public UAuthoritativeActorPoolComponent
{
public:
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KnivesProvider">();
	}
	static class UKnivesProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKnivesProvider>();
	}
};

// Class TheK23.LacerationComponent
// 0x0428 (0x04E0 - 0x00B8)
class ULacerationComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x38];                                      // 0x00B8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _laceration;                                       // 0x00F0(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatusEffect*                          _onHitSpeedBoost;                                  // 0x0100(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _lacerationOnHitSpeedBoostStatusEffectClass;       // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_110[0x18];                                     // 0x0110(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTunableStat                           _maxLaceration;                                    // 0x0128(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _lacerationExplosionDamage;                        // 0x01A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _lacerationRegressionPerSecond;                    // 0x01D0(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _lacerationRegressionPerSecondWhileRunning;        // 0x0250(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _speedBoostIntensity;                              // 0x02D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _speedBoostDuration;                               // 0x02F8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _stopTickingRegressionWhileInjured;                // 0x0320(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _stopTickingRegressionWhileInChase;                // 0x0348(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _stopTickingRegressionWithinTerrorRadius;          // 0x0370(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _timeBeforeLacerationDecayStarts;                  // 0x0398(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _regressionBufferTimerAlwaysTicks;                 // 0x0418(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _lacerationToRemoveOnBasicAttack;                  // 0x0440(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _thresholdForGraceTimerScoreEvent;                 // 0x0468(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _minThresholdForLowLacerationScoreEvent;           // 0x0490(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _maxThresholdForLowLacerationScoreEvent;           // 0x04B8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void Cosmetic_OnKnifeHit(float lacerationPercent, class AKiller* owningKiller, bool isDangerous, bool causedDamage, bool CausedKO, const struct FVector& ImpactNormal);
	void Multicast_KnifeHit(float newLaceration, class AKiller* owningKiller, bool causedDamage, bool CausedKO, const struct FVector& impactLocation, const struct FVector& ImpactNormal);
	void OnRepLaceration(float oldLaceration);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LacerationComponent">();
	}
	static class ULacerationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULacerationComponent>();
	}
};

// Class TheK23.BaseLacerationLevelCondition
// 0x0000 (0x00F0 - 0x00F0)
class UBaseLacerationLevelCondition : public UEventDrivenModifierCondition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseLacerationLevelCondition">();
	}
	static class UBaseLacerationLevelCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseLacerationLevelCondition>();
	}
};

// Class TheK23.LacerationLevelCondition
// 0x0008 (0x00F8 - 0x00F0)
class ULacerationLevelCondition final : public UBaseLacerationLevelCondition
{
public:
	float                                         _lacerationLevelRequired;                          // 0x00F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LacerationLevelCondition">();
	}
	static class ULacerationLevelCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULacerationLevelCondition>();
	}
};

// Class TheK23.LacerationAlmostFullCondition
// 0x0008 (0x00F8 - 0x00F0)
class ULacerationAlmostFullCondition final : public UBaseLacerationLevelCondition
{
public:
	float                                         _missingLacerationThreshold;                       // 0x00F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LacerationAlmostFullCondition">();
	}
	static class ULacerationAlmostFullCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULacerationAlmostFullCondition>();
	}
};

// Class TheK23.NoWayOut
// 0x0030 (0x0490 - 0x0460)
class UNoWayOut final : public UPerk
{
public:
	float                                         _exitGatePanelBlockBaseDuration[0x3];              // 0x0460(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _exitGatePanelBlockDurationPerToken[0x3];          // 0x046C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASurvivor*>                      _hookedSurvivors;                                  // 0x0478(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_TriggerLoudNoise(class ADBDPlayer* Instigator, class AEscapeDoor* EscapeDoor);

	float GetExitGatePanelBlockBaseDurationAtLevel() const;
	float GetExitGatePanelBlockDurationPerTokenAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoWayOut">();
	}
	static class UNoWayOut* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoWayOut>();
	}
};

// Class TheK23.ReloadKnives
// 0x0000 (0x07A0 - 0x07A0)
class UReloadKnives final : public UBaseLockerInteraction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReloadKnives">();
	}
	static class UReloadKnives* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReloadKnives>();
	}
};

// Class TheK23.Starstruck
// 0x0128 (0x0588 - 0x0460)
class UStarstruck final : public UPerk
{
public:
	float                                         _exposedEffectDuration[0x3];                       // 0x0460(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _perkCooldownDuration[0x3];                        // 0x046C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class ASurvivor>, TWeakObjectPtr<class UStatusEffect>> _survivorExposedEffects; // 0x0478(0x0050)(ExportObject, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C8[0xB8];                                     // 0x04C8(0x00B8)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _exposedEffectClass;                               // 0x0580(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	float GetExposedEffectDurationAtLevel() const;
	float GetPerkCooldownDurationAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Starstruck">();
	}
	static class UStarstruck* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarstruck>();
	}
};

// Class TheK23.SuperModeDeactivation
// 0x0020 (0x0790 - 0x0770)
class USuperModeDeactivation final : public UInteractionDefinition
{
public:
	struct FDBDTunableRowHandle                   _deactivationDuration;                             // 0x0768(0x0028)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SuperModeDeactivation">();
	}
	static class USuperModeDeactivation* GetDefaultObj()
	{
		return GetDefaultObjImpl<USuperModeDeactivation>();
	}
};

// Class TheK23.ThrowingKnives
// 0x00A8 (0x0600 - 0x0558)
class AThrowingKnives final : public ACollectable
{
public:
	uint8                                         Pad_558[0x40];                                     // 0x0558(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlurryComboScoreComponent*             _flurryScoreComponent;                             // 0x0598(0x0008)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTricksterSuperModeComponent*           _superModeComponent;                               // 0x05A0(0x0008)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK23PowerProgressPresentationComponent* _superModeChargePresentationComponent;             // 0x05A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPowerChargeComponent*                  _superModeChargeComponent;                         // 0x05B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _tricksterOutOfAmmoStatusEffectClass;              // 0x05B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKnivesProvider*                        _knivesProvider;                                   // 0x05C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKnivesLauncher*                        _knivesLauncher;                                   // 0x05C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ULacerationComponent>       _lacerationComponentClass;                         // 0x05D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UReloadKnives>              _reloadInteractionClass;                           // 0x05D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _minimumTimeBetweenBroadcast;                      // 0x05E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5E4[0x1C];                                     // 0x05E4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_SpawnReloadInteractionOnLockers();
	void Cosmetic_OnComboFinished(bool isSRankCombo);
	void Cosmetic_OnComboScoreChanged(float scoreNormalizedForAudio);
	void Cosmetic_OnLaunch();
	void Cosmetic_OnUsePowerWhenInCooldown();
	void Cosmetic_OnUsePowerWhenOutOfAmmo();
	void Multicast_OnUsePowerWhenInCooldown();
	void Multicast_OnUsePowerWhenOutOfAmmo();
	void OnItemUsedStateChanged(bool Pressed);

	class UKnivesLauncher* GetLauncher() const;
	class AKiller* GetSlasher() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ThrowingKnives">();
	}
	static class AThrowingKnives* GetDefaultObj()
	{
		return GetDefaultObjImpl<AThrowingKnives>();
	}
};

// Class TheK23.ThrowingKnivesHitSubAnimInstance
// 0x0050 (0x0630 - 0x05E0)
class UThrowingKnivesHitSubAnimInstance final : public UBaseSurvivorAnimInstance
{
public:
	uint8                                         Pad_5E0[0x8];                                      // 0x05E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _hitByKnifeTrigger;                                // 0x05E8(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _knifeHitCausedKOTrigger;                          // 0x05E9(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _knifeHitCausedDamageTrigger;                      // 0x05EA(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _useAlternateHitReactionState;                     // 0x05EB(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _knifeHitStateHitAngle;                            // 0x05EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _alternateKnifeHitStateHitAngle;                   // 0x05F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCrawling;                                       // 0x05F4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _hitByKnifeTriggerEventDriven;                     // 0x05F5(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _knifeHitCausedDamageTriggerEventDriven;           // 0x05F6(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _knifeHitCausedKOTriggerEventDriven;               // 0x05F7(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F8[0x38];                                     // 0x05F8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ThrowingKnivesHitSubAnimInstance">();
	}
	static class UThrowingKnivesHitSubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UThrowingKnivesHitSubAnimInstance>();
	}
};

// Class TheK23.TricksterAnimInstance
// 0x0080 (0x07A0 - 0x0720)
class UTricksterAnimInstance final : public UKillerAnimInstance
{
public:
	bool                                          _isAiming;                                         // 0x0720(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_721[0x3];                                      // 0x0721(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _isThrowInputPressed;                              // 0x0724(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isThrowingWithLeftArm;                            // 0x0728(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isThrowingWithRightArm;                           // 0x0729(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_72A[0x2];                                      // 0x072A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _throwPlayRate;                                    // 0x072C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _baseThrowDuration;                                // 0x0730(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _consecutiveKnivesThrownStacks;                    // 0x0734(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _timeSinceLastKnifeLaunched;                       // 0x0738(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _currentAmmoCount;                                 // 0x073C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInSuperMode;                                    // 0x0740(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInActivation;                                   // 0x0741(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_742[0x2];                                      // 0x0742(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _activationDuration;                               // 0x0744(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInDeactivation;                                 // 0x0748(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_749[0x3];                                      // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _deactivationDuration;                             // 0x074C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isSwappingInteraction;                            // 0x0750(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInAimingInteraction;                            // 0x0751(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_752[0x46];                                     // 0x0752(0x0046)(Fixing Size After Last Property [ Dumper-7 ])
	class AThrowingKnives*                        _throwingKnives;                                   // 0x0798(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TricksterAnimInstance">();
	}
	static class UTricksterAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTricksterAnimInstance>();
	}
};

// Class TheK23.TricksterCharacterVFXInterface
// 0x0000 (0x0000 - 0x0000)
class ITricksterCharacterVFXInterface final
{
public:
	void HideWeapon();
	void SetIsInCooldown(bool isInCooldown);
	void SetIsSuperModeReady(bool isSuperModeReady);
	void SetKnivesVisibility(bool leftKnife, bool rightKnife);
	void SetSuperModeActive(bool Active);
	void ShowWeapon();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TricksterCharacterVFXInterface">();
	}
	static class ITricksterCharacterVFXInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITricksterCharacterVFXInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class TheK23.TricksterSuperModeComponent
// 0x0228 (0x02E0 - 0x00B8)
class UTricksterSuperModeComponent final : public UActorComponent
{
public:
	bool                                          _isInSuperMode;                                    // 0x00B8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isSuperModeReady;                                 // 0x00B9(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isInCooldown;                                     // 0x00BA(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BB[0xD];                                       // 0x00BB(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _chargesToAddOnKnifeHit;                           // 0x00C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _superModeMaxCharge;                               // 0x00F0(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _superModeReadyDepletionPerSecond;                 // 0x0170(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _superModeActiveDuration;                          // 0x0198(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_218[0x60];                                     // 0x0218(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _superModeCooldown;                                // 0x0278(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _shouldDisableFlurryDuringCooldown;                // 0x02A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x10];                                     // 0x02C8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _comboExtendSuperModeStatusEffectClass;            // 0x02D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void InitSuperModeMaxCharge();
	void OnRepIsInCooldown();
	void OnRepIsInSuperMode();
	void OnRepIsSuperModeReady();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TricksterSuperModeComponent">();
	}
	static class UTricksterSuperModeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTricksterSuperModeComponent>();
	}
};

// Class TheK23.TriggerTimerOnLacerationAlmostFullEffect
// 0x0010 (0x03A8 - 0x0398)
class UTriggerTimerOnLacerationAlmostFullEffect final : public UStatusEffect
{
public:
	class ULacerationComponent*                   _lacerationComponent;                              // 0x0398(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _duration;                                         // 0x03A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TriggerTimerOnLacerationAlmostFullEffect">();
	}
	static class UTriggerTimerOnLacerationAlmostFullEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTriggerTimerOnLacerationAlmostFullEffect>();
	}
};

}

