#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayUtilities

#include "Basic.hpp"

#include "GameplayUtilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GameplayUtilities.MovementUtilities.Local_MoveActorTo
// 0x0040 (0x0040 - 0x0000)
struct MovementUtilities_Local_MoveActorTo final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0038(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GameplayUtilities.CharacterSightComponent.Server_UpdateDiscernedCharacters
// 0x0010 (0x0010 - 0x0000)
struct CharacterSightComponent_Server_UpdateDiscernedCharacters final
{
public:
	TArray<class ACharacter*>                     Characters;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.CharacterSightComponent.SetMaximumSightDistance
// 0x0004 (0x0004 - 0x0000)
struct CharacterSightComponent_SetMaximumSightDistance final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.CharacterSightComponent.SetMinimumCharacterScreenPercentInZone
// 0x0008 (0x0008 - 0x0000)
struct CharacterSightComponent_SetMinimumCharacterScreenPercentInZone final
{
public:
	float                                         Trigger;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         untrigger;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.CharacterSightComponent.SetMinimumCharacterScreenPercentNotInZone
// 0x0008 (0x0008 - 0x0000)
struct CharacterSightComponent_SetMinimumCharacterScreenPercentNotInZone final
{
public:
	float                                         Trigger;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         untrigger;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.CharacterSightComponent.SetMinimumCharacterVisiblePixelsPercent
// 0x0008 (0x0008 - 0x0000)
struct CharacterSightComponent_SetMinimumCharacterVisiblePixelsPercent final
{
public:
	float                                         Trigger;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         untrigger;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.CharacterSightComponent.SetScreenVisibilityZoneRadiusPercent
// 0x0008 (0x0008 - 0x0000)
struct CharacterSightComponent_SetScreenVisibilityZoneRadiusPercent final
{
public:
	float                                         valueX;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         valueY;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.StateController.GetCurrentStateID
// 0x000C (0x000C - 0x0000)
struct StateController_GetCurrentStateID final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.ActorPoolComponent.OnActorDestroyed
// 0x0008 (0x0008 - 0x0000)
struct ActorPoolComponent_OnActorDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.ActorPoolComponent.OnActorsInPoolAcquiredChanged
// 0x0001 (0x0001 - 0x0000)
struct ActorPoolComponent_OnActorsInPoolAcquiredChanged final
{
public:
	bool                                          acquired;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.CharacterPusherComponent.Construct
// 0x0018 (0x0018 - 0x0000)
struct CharacterPusherComponent_Construct final
{
public:
	class UCapsuleComponent*                      characterDetector;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                      characterCollision;                                // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBasePushStrategyComponent*             pushStrategy;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.CharacterPusherComponent.OnCharacterDetectorOverlapExit
// 0x0020 (0x0020 - 0x0000)
struct CharacterPusherComponent_OnCharacterDetectorOverlapExit final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GameplayUtilities.CharacterPusherComponent.SetIgnoredCharacter
// 0x0010 (0x0010 - 0x0000)
struct CharacterPusherComponent_SetIgnoredCharacter final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ignore;                                            // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function GameplayUtilities.BasePoolableActorComponent.SetAcquired
// 0x0001 (0x0001 - 0x0000)
struct BasePoolableActorComponent_SetAcquired final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.BasePoolableActorComponent.IsAcquired
// 0x0001 (0x0001 - 0x0000)
struct BasePoolableActorComponent_IsAcquired final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.BoxOcclusionQueryComponent.GetEstimatedRenderedPixelCount
// 0x0004 (0x0004 - 0x0000)
struct BoxOcclusionQueryComponent_GetEstimatedRenderedPixelCount final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.BoxOcclusionQueryComponent.GetNumberOfVisiblePixels
// 0x0004 (0x0004 - 0x0000)
struct BoxOcclusionQueryComponent_GetNumberOfVisiblePixels final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.BoxOcclusionQueryComponent.GetVisiblePercentOfScreen
// 0x0004 (0x0004 - 0x0000)
struct BoxOcclusionQueryComponent_GetVisiblePercentOfScreen final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.CharacterSightableComponent.GetHighestSightStatus
// 0x0001 (0x0001 - 0x0000)
struct CharacterSightableComponent_GetHighestSightStatus final
{
public:
	ESightStatus                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.ChargeableUtilities.ConvertSecondsToAddToRateMultiplier
// 0x0010 (0x0010 - 0x0000)
struct ChargeableUtilities_ConvertSecondsToAddToRateMultiplier final
{
public:
	float                                         secondsToAdd;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         baseMaxSeconds;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         baseRate;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.PawnUtilities.GetLocallyObservedPawn
// 0x0010 (0x0010 - 0x0000)
struct PawnUtilities_GetLocallyObservedPawn final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function GameplayUtilities.PawnUtilities.GetOwningPawn
// 0x0010 (0x0010 - 0x0000)
struct PawnUtilities_GetOwningPawn final
{
public:
	const class AActor*                           Origin;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

