#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABSub_Survivor00_FireCracker

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "ABSub_Survivor00_FireCracker_structs.hpp"
#include "Engine_structs.hpp"
#include "DBDAnimation_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABSub_Survivor00_FireCracker.ABSub_Survivor00_FireCracker_C
// 0x06F0 (0x0D20 - 0x0630)
class UABSub_Survivor00_FireCracker_C final : public UFireCrackerSurvivorSubAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABSub_Survivor00_FireCracker::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables; // 0x0638(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_63A[0x6];                                      // 0x063A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0640(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0648(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0650(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0670(0x00D0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0740(0x0108)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0848(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0870(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0898(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x08C0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x08F0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0910(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0958(0x00E0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0A38(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0A80(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0AC8(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0AF8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0B18(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0B48(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0B68(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0C30(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0C50(0x00D0)()

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void AnimNotify_InteractionCollectableLayerDone();
	void ExecuteUbergraph_ABSub_Survivor00_FireCracker(int32 EntryPoint);
	void SurvivorInteractionCollectableLayer(const struct FPoseLink& InPose, struct FPoseLink* SurvivorInteractionCollectableLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABSub_Survivor00_FireCracker_C">();
	}
	static class UABSub_Survivor00_FireCracker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABSub_Survivor00_FireCracker_C>();
	}
};

}

