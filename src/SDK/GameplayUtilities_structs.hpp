#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayUtilities

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum GameplayUtilities.ESightStatus
// NumValues: 0x0004
enum class ESightStatus : uint8
{
	OutOfSight                               = 0,
	Discerned                                = 1,
	Sighted                                  = 2,
	ESightStatus_MAX                         = 3,
};

// Enum GameplayUtilities.EComparisonOperation
// NumValues: 0x0007
enum class EComparisonOperation : uint8
{
	EqualTo                                  = 0,
	NotEqualTo                               = 1,
	GreaterThan                              = 2,
	GreaterThanOrEqualTo                     = 3,
	LesserThan                               = 4,
	LesserThanOrEqualTo                      = 5,
	EComparisonOperation_MAX                 = 6,
};

// ScriptStruct GameplayUtilities.DiscernibleCharacter
// 0x0018 (0x0018 - 0x0000)
struct FDiscernibleCharacter final
{
public:
	class ACharacter*                             _character;                                        // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct GameplayUtilities.AuthorityDiscernedCharacter
// 0x0010 (0x0010 - 0x0000)
struct FAuthorityDiscernedCharacter final
{
public:
	class ACharacter*                             _character;                                        // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isSighted;                                        // 0x0008(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct GameplayUtilities.HitValidatorInstigatorParams
// 0x0090 (0x0090 - 0x0000)
struct alignas(0x10) FHitValidatorInstigatorParams final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x78];                                       // 0x0008(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitPrimitive;                                      // 0x0080(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsFromClient;                                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct GameplayUtilities.HitValidatorTargetParams
// 0x0018 (0x0018 - 0x0000)
struct FHitValidatorTargetParams final
{
public:
	class ACharacter*                             Target;                                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                      HittableCapsule;                                   // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetLocationTimestamp;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct GameplayUtilities.HitValidationReport
// 0x0240 (0x0240 - 0x0000)
struct FHitValidationReport final
{
public:
	struct FHitValidatorInstigatorParams          InstigatorParams;                                  // 0x0000(0x0090)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHitValidatorTargetParams              TargetParams;                                      // 0x0090(0x0018)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         ValidationTimestamp;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            TargetRecorderTimeRange;                           // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             InstigatorOwningCharacter;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumDistance;                                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleInflation;                                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValidHit;                                        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValidDistance;                                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValidNotStunned;                                 // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D3[0xD];                                       // 0x00D3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InstigatorTransform;                               // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RewindedTargetLocation;                            // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                targetLocation;                                    // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SquareDistance;                                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HasPerformCollisionCheck;                          // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValidCollision;                                  // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_176[0xA];                                      // 0x0176(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             HitPrimitiveTransform;                             // 0x0180(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             HittablePrimitiveTransform;                        // 0x01E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

