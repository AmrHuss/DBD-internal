#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheNightmare

#include "Basic.hpp"

#include "DataTableUtilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DBDCompetence_classes.hpp"
#include "DBDInteraction_classes.hpp"
#include "GameplayTagUtilities_structs.hpp"
#include "Engine_classes.hpp"
#include "StatSystem_structs.hpp"
#include "DBDGameplay_classes.hpp"
#include "DBDAnimation_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "DBDCosmetic_classes.hpp"
#include "SystemUtilities_structs.hpp"


namespace SDK
{

// Class TheNightmare.TheNightmareUtilities
// 0x0000 (0x0030 - 0x0030)
class UTheNightmareUtilities final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TheNightmareUtilities">();
	}
	static class UTheNightmareUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTheNightmareUtilities>();
	}
};

// Class TheNightmare.CharacterDreamworldComponent
// 0x00F8 (0x01B0 - 0x00B8)
class UCharacterDreamworldComponent : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(bool IsInDreamworld, bool locallyObservedChanged)> DreamStateChanged; // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     _mobileDreamworldPostProcessClass;                 // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAmbianceManagerDataAsset*              _dreamWorldAmbiance;                               // 0x00D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTagStateBool                          _isInDreamworld;                                   // 0x00D8(0x0048)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x48];                                     // 0x0120(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessUpdate*                     _mobileDreamworldPostProcess;                      // 0x0168(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_170[0x40];                                     // 0x0170(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ADBDPlayer* GetLocallyObservedOrLocalCharacter(class UObject* WorldContextObject);

	void Authority_SetIsInDreamworld(bool NewValue, bool isScripted);
	void FireWakeUpScoreEvent(class ADBDPlayer* Instigator);
	void OnRep_IsInDreamworld();

	bool IsInDreamworld() const;
	bool ShouldShowVignette() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterDreamworldComponent">();
	}
	static class UCharacterDreamworldComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterDreamworldComponent>();
	}
};

// Class TheNightmare.NightmarePowerSwitchingAbility
// 0x0088 (0x0268 - 0x01E0)
class UNightmarePowerSwitchingAbility final : public UKillerAbilityComponent
{
public:
	TSubclassOf<class UNightmarePowerSwitchingInteraction> _powerSwitchingInteractionClass;          // 0x01E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNightmarePowerSwitchingInteraction*    _powerSwitchingInteraction;                        // 0x01E8(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTagStateBool                          _isUsingDreamPallets;                              // 0x01F0(0x0048)(Net, RepNotify, NativeAccessSpecifierPrivate)
	class FText                                   _switchToPalletInteractionDescriptionText;         // 0x0238(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                   _switchToSnareInteractionDescriptionText;          // 0x0250(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void OnRep_IsUsingDreamPallets() const;
	void OnRep_PowerSwitchingInteraction() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NightmarePowerSwitchingAbility">();
	}
	static class UNightmarePowerSwitchingAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNightmarePowerSwitchingAbility>();
	}
};

// Class TheNightmare.Addon_DreamInducer_ClassPhoto
// 0x0030 (0x0330 - 0x0300)
class UAddon_DreamInducer_ClassPhoto final : public UItemAddon
{
public:
	TSubclassOf<class UTargetableComponent>       _teleportEscapeDoorTargetClass;                    // 0x0300(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                _teleportLocationFinderOffset;                     // 0x0308(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_320[0x10];                                     // 0x0320(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_DreamInducer_ClassPhoto">();
	}
	static class UAddon_DreamInducer_ClassPhoto* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_DreamInducer_ClassPhoto>();
	}
};

// Class TheNightmare.DreamInducerComponent
// 0x0008 (0x00C0 - 0x00B8)
class UDreamInducerComponent final : public UActorComponent
{
public:
	TSubclassOf<class UActorComponent>            _generatorDreamworldClass;                         // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnLevelReadyToPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamInducerComponent">();
	}
	static class UDreamInducerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamInducerComponent>();
	}
};

// Class TheNightmare.Addon_DreamInducer_NancysMasterpiece
// 0x0038 (0x0338 - 0x0300)
class UAddon_DreamInducer_NancysMasterpiece final : public UItemAddon
{
public:
	uint8                                         Pad_300[0x10];                                     // 0x0300(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _cooldownReductionPercent;                         // 0x0310(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_DreamInducer_NancysMasterpiece">();
	}
	static class UAddon_DreamInducer_NancysMasterpiece* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_DreamInducer_NancysMasterpiece>();
	}
};

// Class TheNightmare.K10PowerSwitchingWidgetComponent
// 0x0000 (0x00D0 - 0x00D0)
class UK10PowerSwitchingWidgetComponent final : public UPowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K10PowerSwitchingWidgetComponent">();
	}
	static class UK10PowerSwitchingWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK10PowerSwitchingWidgetComponent>();
	}
};

// Class TheNightmare.Addon_DreamInducer_SwingChains
// 0x0008 (0x0318 - 0x0310)
class UAddon_DreamInducer_SwingChains final : public UOnEventBaseAddon
{
public:
	float                                         _blockRange;                                       // 0x0310(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _blockDuration;                                    // 0x0314(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_DreamInducer_SwingChains">();
	}
	static class UAddon_DreamInducer_SwingChains* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_DreamInducer_SwingChains>();
	}
};

// Class TheNightmare.AimDreamPalletInteraction
// 0x0080 (0x09A0 - 0x0920)
class UAimDreamPalletInteraction final : public UBasicChargeableInteraction
{
public:
	uint8                                         Pad_920[0x80];                                     // 0x0920(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AimDreamPalletInteraction">();
	}
	static class UAimDreamPalletInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAimDreamPalletInteraction>();
	}
};

// Class TheNightmare.BlackBoxSingleGateBlockerStatusEffect
// 0x0048 (0x0470 - 0x0428)
class UBlackBoxSingleGateBlockerStatusEffect final : public USingleGateBlockerEffect
{
public:
	uint8                                         Pad_428[0x48];                                     // 0x0428(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlackBoxSingleGateBlockerStatusEffect">();
	}
	static class UBlackBoxSingleGateBlockerStatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlackBoxSingleGateBlockerStatusEffect>();
	}
};

// Class TheNightmare.BloodWarden
// 0x0070 (0x04D0 - 0x0460)
class UBloodWarden final : public UPerk
{
public:
	uint8                                         Pad_460[0x50];                                     // 0x0460(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _bloodWardenBlockerStatusEffectClass;              // 0x04B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _revealPlayerStatusEffectClass;                    // 0x04B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _perkLevelSpikeDurations[0x3];                     // 0x04C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetPerkLevelSpikeDurationsAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodWarden">();
	}
	static class UBloodWarden* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodWarden>();
	}
};

// Class TheNightmare.DreamPalletAbility
// 0x0298 (0x0478 - 0x01E0)
class UDreamPalletAbility final : public UKillerAbilityComponent
{
public:
	TSubclassOf<class UAimDreamPalletInteraction> _aimDreamPalletInteractionClass;                   // 0x01E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAimDreamPalletInteraction*             _aimDreamPalletInteraction;                        // 0x01E8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPlaceDreamPalletInteraction> _placeDreamPalletInteractionClass;               // 0x01F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlaceDreamPalletInteraction*           _placeDreamPalletInteraction;                      // 0x01F8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UExplodeDreamPalletInteraction> _explodeDreamPalletInteractionClass;           // 0x0200(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExplodeDreamPalletInteraction*         _explodeDreamPalletInteraction;                    // 0x0208(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UTargetableComponent>       _dreamPalletTargetClass;                           // 0x0210(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UTargetingComponent>        _dreamPalletTargetingComponentClass;               // 0x0218(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPalletTrackerVisibilityComponent> _visibilityComponentClass;                  // 0x0220(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTargetingComponent*                    _dreamPalletTargetingComponent;                    // 0x0228(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTargetableComponent*>           _palletTargets;                                    // 0x0230(0x0010)(ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class APalletTracker*>                 _palletTrackers;                                   // 0x0240(0x0010)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class APallet*>                        _activeDreamPallets;                               // 0x0250(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FNonTunableStat                        _explosionDelayStat;                               // 0x0260(0x0060)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FNonTunableStat                        _explosionRadiusStat;                              // 0x02C0(0x0060)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class APalletTracker*                         _lockedTargetTracker;                              // 0x0320(0x0008)(Net, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_328[0x150];                                    // 0x0328(0x0150)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_Authority_RecycleDreamPallet(class APallet* Pallet);
	void OnRep_PalletTargets();
	void OnRep_PalletTrackers();
	void Server_SetTarget(class UTargetableComponent* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamPalletAbility">();
	}
	static class UDreamPalletAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamPalletAbility>();
	}
};

// Class TheNightmare.DreamPalletAbilityData
// 0x0020 (0x0090 - 0x0070)
class UDreamPalletAbilityData final : public UKillerAbilityData
{
public:
	float                                         _maxTargetingDistance;                             // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _explosionDelay;                                   // 0x0074(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _explosionRadius;                                  // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _explosionHalfHeight;                              // 0x007C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _palletMeshCenterOffset;                           // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _sleepinessAddedByExplosion;                       // 0x0084(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _chargeTime;                                       // 0x0088(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetExplosionRadius() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamPalletAbilityData">();
	}
	static class UDreamPalletAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamPalletAbilityData>();
	}
};

// Class TheNightmare.DreamPalletAnimInstance
// 0x0010 (0x03A0 - 0x0390)
class UDreamPalletAnimInstance final : public UPalletAnimInstance
{
public:
	bool                                          _isExploding;                                      // 0x0388(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_389[0x17];                                     // 0x0389(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamPalletAnimInstance">();
	}
	static class UDreamPalletAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamPalletAnimInstance>();
	}
};

// Class TheNightmare.DreamPalletCosmeticComponent
// 0x0058 (0x0110 - 0x00B8)
class UDreamPalletCosmeticComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _maxCosmeticVisibilityDistance;                    // 0x00C0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E8[0x28];                                      // 0x00E8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_UpdateSurvivorDistanceToPallet(float Distance);

	float GetMaxCosmeticVisibilityDistance() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamPalletCosmeticComponent">();
	}
	static class UDreamPalletCosmeticComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamPalletCosmeticComponent>();
	}
};

// Class TheNightmare.WakerObjectAnimInstance
// 0x0040 (0x0390 - 0x0350)
class UWakerObjectAnimInstance final : public UAnimInstance
{
public:
	float                                         _reappearTimerCooldown;                            // 0x0350(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _wakeUpCharge;                                     // 0x0354(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _chargeStarted;                                    // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _interactionComplete;                              // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _outEnd;                                           // 0x035A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _reset;                                            // 0x035B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _inEnd;                                            // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _wakerObjectStarted;                               // 0x035D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _respawnEnd;                                       // 0x035E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _cancelEnd;                                        // 0x035F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x30];                                     // 0x0360(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnReappear();
	void ResetReappearTimer();

	class AWakerObject* GetWakerObject() const;
	float GetWakerObjectCharge() const;
	bool GetWakerObjectChargeComplete() const;
	bool GetWakerObjectStarted() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WakerObjectAnimInstance">();
	}
	static class UWakerObjectAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWakerObjectAnimInstance>();
	}
};

// Class TheNightmare.DreamPalletTargetableStrategy
// 0x0008 (0x0050 - 0x0048)
class UDreamPalletTargetableStrategy final : public UTargetableStrategy
{
public:
	float                                         _targetPointVerticalOffset;                        // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamPalletTargetableStrategy">();
	}
	static class UDreamPalletTargetableStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamPalletTargetableStrategy>();
	}
};

// Class TheNightmare.DreamSnareAbilityData
// 0x0028 (0x0098 - 0x0070)
class UDreamSnareAbilityData final : public UKillerAbilityData
{
public:
	float                                         _chargeTime;                                       // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _launchSpeed;                                      // 0x0074(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _range;                                            // 0x0078(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxHeightDifference;                              // 0x007C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _snareSpawnForwardOffset;                          // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _groundCheckRaycastHeight;                         // 0x0084(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _sleepinessAdded;                                  // 0x0088(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _hinderedStrength;                                 // 0x008C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _hinderedDuration;                                 // 0x0090(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamSnareAbilityData">();
	}
	static class UDreamSnareAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamSnareAbilityData>();
	}
};

// Class TheNightmare.DreamProjectionAbility
// 0x01E8 (0x03C8 - 0x01E0)
class UDreamProjectionAbility final : public UKillerAbilityComponent
{
public:
	uint8                                         Pad_1E0[0xC0];                                     // 0x01E0(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      _canTargetQuery;                                   // 0x02A0(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDreamProjectionInteractionDefinition> _teleportInteractionClass;              // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDreamProjectionInteractionDefinition*  _teleportInteraction;                              // 0x02F0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDreamProjectionSurvivorTarget> _teleportSurvivorTargetClass;                  // 0x02F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDreamProjectionGeneratorTarget> _teleportGeneratorTargetClass;                // 0x0300(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UTargetingComponent>        _teleportTargetingComponentClass;                  // 0x0308(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _dreamProjectionKillerInstinctStatusEffectClass;   // 0x0310(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTargetingComponent*                    _teleportTargetingComponent;                       // 0x0318(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDreamProjectionPositionFinderComponent> _teleportPositionFinderClass;         // 0x0320(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDreamProjectionPositionFinderComponent* _teleportPositionFinder;                          // 0x0328(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTargetableComponent*>           _teleportTargets;                                  // 0x0330(0x0010)(ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_340[0x88];                                     // 0x0340(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_TeleportTargets();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionAbility">();
	}
	static class UDreamProjectionAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionAbility>();
	}
};

// Class TheNightmare.DreamProjectionAbilityData
// 0x0020 (0x0090 - 0x0070)
class UDreamProjectionAbilityData final : public UKillerAbilityData
{
public:
	float                                         _cancelCooldown;                                   // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _failedCooldown;                                   // 0x0074(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _percentCooldownReductionPerSleepingSurvivor;      // 0x0078(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _chargeTime;                                       // 0x007C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _killerInstinctLingerDuration;                     // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _effectRadius;                                     // 0x0084(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _sleepinessAdded;                                  // 0x0088(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionAbilityData">();
	}
	static class UDreamProjectionAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionAbilityData>();
	}
};

// Class TheNightmare.DreamProjectionEscapeDoorTarget
// 0x0010 (0x0380 - 0x0370)
class UDreamProjectionEscapeDoorTarget final : public UTargetableComponent
{
public:
	uint8                                         Pad_368[0x18];                                     // 0x0368(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionEscapeDoorTarget">();
	}
	static class UDreamProjectionEscapeDoorTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionEscapeDoorTarget>();
	}
};

// Class TheNightmare.DreamProjectionGeneratorTargetableStrategy
// 0x0000 (0x0048 - 0x0048)
class UDreamProjectionGeneratorTargetableStrategy final : public UTargetableStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionGeneratorTargetableStrategy">();
	}
	static class UDreamProjectionGeneratorTargetableStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionGeneratorTargetableStrategy>();
	}
};

// Class TheNightmare.DreamProjectionGeneratorTarget
// 0x0000 (0x0370 - 0x0370)
class UDreamProjectionGeneratorTarget final : public UTargetableComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionGeneratorTarget">();
	}
	static class UDreamProjectionGeneratorTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionGeneratorTarget>();
	}
};

// Class TheNightmare.DreamProjectionInteractionDefinition
// 0x00E0 (0x0A70 - 0x0990)
class UDreamProjectionInteractionDefinition final : public UTapOrChargeChargeableInteraction
{
public:
	float                                         OnBloodSpurtsAINoiseEventRange;                    // 0x0988(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98C[0x3C];                                     // 0x098C(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetableComponent*                   _teleportTarget;                                   // 0x09C8(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTransform                             _selectedTeleportLocation;                         // 0x09D0(0x0060)(BlueprintVisible, Net, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isInteractionOngoing;                             // 0x0A30(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _teleportFailed;                                   // 0x0A31(0x0001)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A32[0x2];                                      // 0x0A32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _bloodSpurtInterval;                               // 0x0A34(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _collisionCheckCapsuleHalfHeight;                  // 0x0A38(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _collisionCheckCapsuleRadius;                      // 0x0A3C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                _collisionCheckLocationOffset;                     // 0x0A40(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _capsuleTraceAngleIncrement;                       // 0x0A58(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _downRaycastLength;                                // 0x0A5C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A60[0x10];                                     // 0x0A60(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnTeleportChargeStarted(class ADBDPlayer* Player);
	void Cosmetic_OnTeleported(const struct FTransform& transformBeforeTeleport, const struct FVector& teleportLocation);
	void Cosmetic_OnTeleportLocationChosen(const struct FTransform& Location, const class ASurvivor* TargetSurvivor);
	void Cosmetic_ShowBloodSpurts(const class AGenerator* targetGenerator);
	void Multicast_OnTeleportLocationChosen(const struct FTransform& Location, const class AActor* TargetActor);
	void Multicast_TeleportPlayer(const struct FVector& Location, const struct FRotator& Rotation);
	void OnBloodSpurts(const class AGenerator* targetGenerator);
	void OnRep_TeleportTarget();
	void Server_SetTeleportTarget(class UTargetableComponent* Target);

	class ADBDPlayer* GetOwningPlayer() const;
	bool HasTeleportFailed() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionInteractionDefinition">();
	}
	static class UDreamProjectionInteractionDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionInteractionDefinition>();
	}
};

// Class TheNightmare.DreamProjectionPositionFinderComponent
// 0x0098 (0x0260 - 0x01C8)
class UDreamProjectionPositionFinderComponent final : public USurvivorTeleportationPositionFinderComponent
{
public:
	struct FGameplayTagQuery                      _canBeTeleportedToQuery;                           // 0x01C8(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_210[0x50];                                     // 0x0210(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionPositionFinderComponent">();
	}
	static class UDreamProjectionPositionFinderComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionPositionFinderComponent>();
	}
};

// Class TheNightmare.DreamProjectionSurvivorTargetableStrategy
// 0x0048 (0x0090 - 0x0048)
class UDreamProjectionSurvivorTargetableStrategy final : public UTargetableStrategy
{
public:
	struct FGameplayTagQuery                      _canBeTargetedTagQuery;                            // 0x0048(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionSurvivorTargetableStrategy">();
	}
	static class UDreamProjectionSurvivorTargetableStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionSurvivorTargetableStrategy>();
	}
};

// Class TheNightmare.DreamProjectionSurvivorTarget
// 0x0000 (0x0370 - 0x0370)
class UDreamProjectionSurvivorTarget final : public UTargetableComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamProjectionSurvivorTarget">();
	}
	static class UDreamProjectionSurvivorTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamProjectionSurvivorTarget>();
	}
};

// Class TheNightmare.DreamSnare
// 0x00E0 (0x0380 - 0x02A0)
class ADreamSnare final : public AActor
{
public:
	class UAuthoritativePoolableActorComponent*   _authoritativePoolableActorComponent;              // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isActive;                                         // 0x02A8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isStatic;                                         // 0x02A9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       _dreamSnareCollision;                              // 0x02B0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDreamSnareAbility>      _linkedAbility;                                    // 0x02B8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                _startPosition;                                    // 0x02C0(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                _velocity;                                         // 0x02D8(0x0018)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                _slopeDetectionOverGroundVector;                   // 0x02F0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                _slopeDetectionEndVector;                          // 0x0308(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _rotationInterpSpeed;                              // 0x0320(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _maxGroundCheckTry;                                // 0x0324(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_328[0x58];                                     // 0x0328(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnAcquiredChanged(const bool acquired);
	void Cosmetic_DespawnSnare();
	void Cosmetic_OnSurvivorTriggerDreamTrap(class ASurvivor* Survivor);
	void Cosmetic_SnareInitialized();
	void Cosmetic_SpawnSnare();
	void InitializeSnare();
	void Multicast_OnSnareTriggered(class ASurvivor* survivorTriggering);
	void OnRep_IsActive();
	void OnRep_Velocity();

	bool IsSnareStatic() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamSnare">();
	}
	static class ADreamSnare* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADreamSnare>();
	}
};

// Class TheNightmare.DreamSnareAbility
// 0x01D8 (0x03B8 - 0x01E0)
class UDreamSnareAbility final : public UKillerAbilityComponent
{
public:
	class UAuthoritativeActorPoolComponent*       _dreamSnarePool;                                   // 0x01E0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _dreamSnareStatusEffectClass;                      // 0x01E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class USetDreamSnareInteraction>  _setDreamSnareInteractionClass;                    // 0x01F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class USpawnDreamSnareInteraction> _spawnDreamSnareInteractionClass;                 // 0x01F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ADreamSnare>                _dreamSnareClass;                                  // 0x0200(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USetDreamSnareInteraction*              _setDreamSnareInteraction;                         // 0x0208(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpawnDreamSnareInteraction*            _spawnDreamSnareInteraction;                       // 0x0210(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _navmeshBoxSizeForDreamSnareMovement;              // 0x0218(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _navmeshMaxHeightDifference;                       // 0x021C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _collisionCheckRadius;                             // 0x0220(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_224[0x194];                                    // 0x0224(0x0194)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamSnareAbility">();
	}
	static class UDreamSnareAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamSnareAbility>();
	}
};

// Class TheNightmare.DreamSnareOutlineUpdateStrategy
// 0x0000 (0x0100 - 0x0100)
class UDreamSnareOutlineUpdateStrategy final : public UDefaultOutlineUpdateStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamSnareOutlineUpdateStrategy">();
	}
	static class UDreamSnareOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamSnareOutlineUpdateStrategy>();
	}
};

// Class TheNightmare.DreamSnarePlacerComponent
// 0x0010 (0x0350 - 0x0340)
class UDreamSnarePlacerComponent final : public UObjectPlacerComponent
{
public:
	float                                         _minPitch;                                         // 0x0338(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _minPlacementDistance;                             // 0x033C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxPlacementDistance;                             // 0x0340(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_344[0xC];                                      // 0x0344(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_ActivateSnarePlacement(bool Activate_0);
	void Cosmetic_UpdateSnareIndicator(const struct FTransform& NewTransform);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamSnarePlacerComponent">();
	}
	static class UDreamSnarePlacerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamSnarePlacerComponent>();
	}
};

// Class TheNightmare.DreamSnareTrapPlacementValidationStrategy
// 0x0010 (0x0120 - 0x0110)
class UDreamSnareTrapPlacementValidationStrategy final : public UDefaultObjectPlacementValidationStrategy
{
public:
	float                                         _numberOfGroundTest;                               // 0x0110(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _trapRadius;                                       // 0x0114(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxElevationDifferentialOnTrapEdge;               // 0x0118(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamSnareTrapPlacementValidationStrategy">();
	}
	static class UDreamSnareTrapPlacementValidationStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamSnareTrapPlacementValidationStrategy>();
	}
};

// Class TheNightmare.DreamworldOnlyComponent
// 0x0010 (0x02E0 - 0x02D0)
class UDreamworldOnlyComponent final : public USceneComponent
{
public:
	uint8                                         Pad_2D0[0x10];                                     // 0x02D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DreamworldOnlyComponent">();
	}
	static class UDreamworldOnlyComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDreamworldOnlyComponent>();
	}
};

// Class TheNightmare.EscapeDreamInteraction
// 0x0000 (0x0920 - 0x0920)
class UEscapeDreamInteraction final : public UBasicChargeableInteraction
{
public:
	class AWakerObject* GetOwningWakerObject() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EscapeDreamInteraction">();
	}
	static class UEscapeDreamInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEscapeDreamInteraction>();
	}
};

// Class TheNightmare.ExplodeDreamPalletInteraction
// 0x0010 (0x0780 - 0x0770)
class UExplodeDreamPalletInteraction final : public UInteractionDefinition
{
public:
	class UTimerObject*                           _explosionTimer;                                   // 0x0768(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_770[0x10];                                     // 0x0770(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_BeginExplodeDreamPallet(class APallet* Pallet, const float explosionRadius);
	void Cosmetic_CancelExplosion();
	void Cosmetic_ExplodeDreamPallet(class APallet* Pallet);
	void OnRep_ExplosionTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ExplodeDreamPalletInteraction">();
	}
	static class UExplodeDreamPalletInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExplodeDreamPalletInteraction>();
	}
};

// Class TheNightmare.FireUp
// 0x0028 (0x0488 - 0x0460)
class UFireUp final : public UPerk
{
public:
	uint8                                         Pad_460[0x10];                                     // 0x0460(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _speedBonuses[0x3];                                // 0x0470(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_47C[0xC];                                      // 0x047C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetSpeedBonusAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FireUp">();
	}
	static class UFireUp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFireUp>();
	}
};

// Class TheNightmare.GeneratorDreamworldComponent
// 0x0018 (0x00D0 - 0x00B8)
class UGeneratorDreamworldComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           _beamSocketsForBloodEffect;                        // 0x00C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void Cosmetic_OnPlayerFailSkillCheck(class ADBDPlayer* Player);
	void Cosmetic_SpawnBloodOnGenerator(class AGenerator* Generator, const TArray<class FName>& socketNames);
	void OnRepairSkillCheckFailed(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, ESkillCheckCustomType Type, float ChargeChange);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneratorDreamworldComponent">();
	}
	static class UGeneratorDreamworldComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneratorDreamworldComponent>();
	}
};

// Class TheNightmare.InDreamSurvivorSubAnimInstance
// 0x0030 (0x0610 - 0x05E0)
class UInDreamSurvivorSubAnimInstance final : public UBaseSurvivorAnimInstance
{
public:
	uint8                                         Pad_5E0[0x8];                                      // 0x05E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _shouldLookSleepy;                                 // 0x05E8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCrawling;                                       // 0x05E9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isBeingCarried;                                   // 0x05EA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isDead;                                           // 0x05EB(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHooked;                                         // 0x05EC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCrouched;                                       // 0x05ED(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isIdle;                                           // 0x05EE(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5EF[0x1];                                      // 0x05EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _walkAnimSpeed;                                    // 0x05F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F4[0x1C];                                     // 0x05F4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InDreamSurvivorSubAnimInstance">();
	}
	static class UInDreamSurvivorSubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInDreamSurvivorSubAnimInstance>();
	}
};

// Class TheNightmare.K10DreamPalletWidgetComponent
// 0x0000 (0x00D0 - 0x00D0)
class UK10DreamPalletWidgetComponent final : public UPowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K10DreamPalletWidgetComponent">();
	}
	static class UK10DreamPalletWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK10DreamPalletWidgetComponent>();
	}
};

// Class TheNightmare.K10DreamProjectionWidgetComponent
// 0x0000 (0x00D0 - 0x00D0)
class UK10DreamProjectionWidgetComponent final : public UPowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K10DreamProjectionWidgetComponent">();
	}
	static class UK10DreamProjectionWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK10DreamProjectionWidgetComponent>();
	}
};

// Class TheNightmare.K10DreamSnareWidgetComponent
// 0x0000 (0x00D0 - 0x00D0)
class UK10DreamSnareWidgetComponent final : public UPowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K10DreamSnareWidgetComponent">();
	}
	static class UK10DreamSnareWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK10DreamSnareWidgetComponent>();
	}
};

// Class TheNightmare.NightmareAnimInstance
// 0x0000 (0x0720 - 0x0720)
class UNightmareAnimInstance final : public UKillerAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NightmareAnimInstance">();
	}
	static class UNightmareAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNightmareAnimInstance>();
	}
};

// Class TheNightmare.NightmareCheatComponent
// 0x0000 (0x00B8 - 0x00B8)
class UNightmareCheatComponent final : public UDLCCheatComponent
{
public:
	void DBD_PutSurvivorToSleep(const class FString& PlayerId) const;
	void DBD_WakeUpSurvivor(const class FString& PlayerId) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NightmareCheatComponent">();
	}
	static class UNightmareCheatComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNightmareCheatComponent>();
	}
};

// Class TheNightmare.NightmareHuskOutlineUpdateStrategy
// 0x0000 (0x0100 - 0x0100)
class UNightmareHuskOutlineUpdateStrategy final : public UDefaultOutlineUpdateStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NightmareHuskOutlineUpdateStrategy">();
	}
	static class UNightmareHuskOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNightmareHuskOutlineUpdateStrategy>();
	}
};

// Class TheNightmare.NightmarePower
// 0x0000 (0x0610 - 0x0610)
class ANightmarePower final : public AKillerPower
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NightmarePower">();
	}
	static class ANightmarePower* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANightmarePower>();
	}
};

// Class TheNightmare.NightmarePowerSwitchingInteraction
// 0x0000 (0x0770 - 0x0770)
class UNightmarePowerSwitchingInteraction final : public UInteractionDefinition
{
public:
	void Cosmetic_OnPowerSwitch();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NightmarePowerSwitchingInteraction">();
	}
	static class UNightmarePowerSwitchingInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNightmarePowerSwitchingInteraction>();
	}
};

// Class TheNightmare.NightmareSurvivorCosmeticHelperActor
// 0x00A0 (0x03F8 - 0x0358)
class ANightmareSurvivorCosmeticHelperActor final : public ASurvivorCosmeticHelperActor
{
public:
	struct FGameplayTagQuery                      _canBeTeleportedToTagQuery;                        // 0x0358(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A0[0x10];                                     // 0x03A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USurvivorDreamworldComponent*           _survivorDreamworldComponent;                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B8[0x40];                                     // 0x03B8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnPlayerHitWithDreamAttack(class ASurvivor* Survivor, class AKiller* Killer);
	void Cosmetic_OnPlayerHitWithDreamAttackImmune(class ASurvivor* Survivor, class AKiller* Killer);
	void Cosmetic_OnPlayerInducedSleepWithDreamAttack(class ASurvivor* Survivor, class AKiller* Killer);
	void Cosmetic_ShouldShowTeleportWarning(bool ShouldShow);

	class USurvivorDreamworldComponent* GetDreamworldComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NightmareSurvivorCosmeticHelperActor">();
	}
	static class ANightmareSurvivorCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANightmareSurvivorCosmeticHelperActor>();
	}
};

// Class TheNightmare.PlaceDreamPalletInteraction
// 0x0040 (0x07B0 - 0x0770)
class UPlaceDreamPalletInteraction final : public UInteractionDefinition
{
public:
	TSubclassOf<class UPalletTrackerVisibilityComponent> _visibilityComponentClass;                  // 0x0768(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_770[0x40];                                     // 0x0770(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_DespawnOldDreamPallet(class APallet* oldDreamPallet);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaceDreamPalletInteraction">();
	}
	static class UPlaceDreamPalletInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaceDreamPalletInteraction>();
	}
};

// Class TheNightmare.RememberMe
// 0x0000 (0x0460 - 0x0460)
class URememberMe final : public UPerk
{
public:
	bool DidLoseHealthState(const class AActor* DamagedActor, int32 oldHealthStateCount) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RememberMe">();
	}
	static class URememberMe* GetDefaultObj()
	{
		return GetDefaultObjImpl<URememberMe>();
	}
};

// Class TheNightmare.SetDreamSnareInteraction
// 0x0010 (0x0930 - 0x0920)
class USetDreamSnareInteraction final : public UBasicChargeableInteraction
{
public:
	uint8                                         Pad_920[0x10];                                     // 0x0920(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_BeginShowSnareIndicator();
	void Cosmetic_SetSnareCancelled();
	void Cosmetic_SnarePlacementFailed();
	void Cosmetic_StopShowSnareIndicator();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SetDreamSnareInteraction">();
	}
	static class USetDreamSnareInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetDreamSnareInteraction>();
	}
};

// Class TheNightmare.SpawnDreamSnareInteraction
// 0x0000 (0x0770 - 0x0770)
class USpawnDreamSnareInteraction final : public UInteractionDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpawnDreamSnareInteraction">();
	}
	static class USpawnDreamSnareInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpawnDreamSnareInteraction>();
	}
};

// Class TheNightmare.SurvivorDreamworldComponent
// 0x0320 (0x04D0 - 0x01B0)
class USurvivorDreamworldComponent final : public UCharacterDreamworldComponent
{
public:
	uint8                                         Pad_1B0[0x20];                                     // 0x01B0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class AKiller*                                _linkedKiller;                                     // 0x01D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _survivorDreamWorldStatusEffect;                   // 0x01D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSurvivorSleepiness                    _survivorSleepiness;                               // 0x01E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _sleepinessProtectionTimer;                        // 0x01E8(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _sleepGainPerSecondStat;                           // 0x01F0(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _clockSleepinessProtectionStat;                    // 0x0270(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _sleepThresholdStat;                               // 0x02F0(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                      _inHealActionInDreamworldQuery;                    // 0x0370(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          _isImmuneFromSleepiness;                           // 0x03B8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _showKiller;                                       // 0x03B9(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFastTimer                             _killerGlimpseDurationTimer;                       // 0x03C0(0x0030)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F0[0x10];                                     // 0x03F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFastTimer                             _killerGlimpseCooldownTimer;                       // 0x0400(0x0030)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_430[0x10];                                     // 0x0430(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _glimpseMinDistance;                               // 0x0440(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _glimpseMaxDistance;                               // 0x0444(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _killerGlimpseCooldown;                            // 0x0448(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _killerGlimpseDuration;                            // 0x044C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _useScriptedKillerVisibility;                      // 0x0450(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _showKillerInstantly;                              // 0x0458(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_459[0x77];                                     // 0x0459(0x0077)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_HandleSkillCheckFailure(bool wakeUpEveryoneInteracting, class ADBDPlayer* Instigator);
	void Authority_OnAttacked();
	void Authority_OnHealthStateChanged(EHealthState oldHealthState, EHealthState newHealthState);
	void Authority_PutAsleep();
	void Authority_WakeUpByHookOrDying();
	void Authority_WakeUpByOther(class ADBDPlayer* Instigator);
	void Authority_WakeUpByWakerObject();
	void HandleShowKillerChanged(bool showKiller, bool instantly);
	void InitializeTunableValues(class AKiller* Killer);
	void Local_SetShowKiller(bool showKiller, bool instantly);
	void OnRep_ShowKiller();
	void SetScriptedKillerVisibility(bool useScriptedKillerVisibility);

	class AKiller* GetLinkedKiller() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SurvivorDreamworldComponent">();
	}
	static class USurvivorDreamworldComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurvivorDreamworldComponent>();
	}
};

// Class TheNightmare.WakerObject
// 0x00F0 (0x0498 - 0x03A8)
class AWakerObject final : public AInteractable
{
public:
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          _wakerObjectInteractionZone;                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractor*                            _wakerObjectInteractor;                            // 0x03B8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UEscapeDreamInteraction>    _escapeDreamInteractionClass;                      // 0x03C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _cooldownDurationStat;                             // 0x03C8(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UEscapeDreamInteraction*                _escapeDreamInteraction;                           // 0x0448(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _cooldownTimer;                                    // 0x0450(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x40];                                     // 0x0458(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_CooldownTimeElapsed(float timeElapsedPercent);
	void Cosmetic_InteractionCancelled();
	void Cosmetic_OnCooldownFinished();
	void Cosmetic_OnCooldownStarted();
	void Cosmetic_UpdateVisibility(const class ADBDPlayer* locallyObservedPlayer, bool IsInDreamworld);
	void OnInteractionEntered(class ADBDPlayer* Player);
	void OnRep_CooldownTimer();
	void OnRep_EscapeDreamInteraction();

	bool GetChargeComplete() const;
	float GetInteractionPercentComplete() const;
	class UPrimitiveComponent* GetInteractorPrimitiveComponent() const;
	bool GetIsInteracting() const;
	class USkeletalMeshComponent* GetMesh() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WakerObject">();
	}
	static class AWakerObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWakerObject>();
	}
};

// Class TheNightmare.WakerObjectOutlineStrategy
// 0x0000 (0x0160 - 0x0160)
class UWakerObjectOutlineStrategy final : public USourceBasedOutlineUpdateStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WakerObjectOutlineStrategy">();
	}
	static class UWakerObjectOutlineStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWakerObjectOutlineStrategy>();
	}
};

// Class TheNightmare.WakeUpOtherInteraction
// 0x0080 (0x0940 - 0x08C0)
class UWakeUpOtherInteraction final : public UChargeableInteractionDefinition
{
public:
	struct FTunableStat                           _wakeUpTimeStat;                                   // 0x08C0(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WakeUpOtherInteraction">();
	}
	static class UWakeUpOtherInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWakeUpOtherInteraction>();
	}
};

}

