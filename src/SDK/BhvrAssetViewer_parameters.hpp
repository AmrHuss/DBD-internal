#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BhvrAssetViewer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BhvrAssetViewer_structs.hpp"


namespace SDK::Params
{

// Function BhvrAssetViewer.BhvrAssetEnvironmentSystem.SelectEnvironment
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetEnvironmentSystem_SelectEnvironment final
{
public:
	class FString                                 InDisplayName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightGroup.SetIntensityMultiplier
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetLightGroup_SetIntensityMultiplier final
{
public:
	float                                         NewIntensityMultiplier;                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightGroup.SetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetLightGroup_SetIsEnabled final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightGroup.GetIntensityMultiplier
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetLightGroup_GetIntensityMultiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightGroup.GetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetLightGroup_GetIsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightGroup.HasLights
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetLightGroup_HasLights final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightingRig.AddFillLight
// 0x0008 (0x0008 - 0x0000)
struct BhvrAssetLightingRig_AddFillLight final
{
public:
	class ULightComponent*                        InLight;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightingRig.AddFogLight
// 0x0008 (0x0008 - 0x0000)
struct BhvrAssetLightingRig_AddFogLight final
{
public:
	class ULightComponent*                        InLight;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightingRig.AddKeyLight
// 0x0008 (0x0008 - 0x0000)
struct BhvrAssetLightingRig_AddKeyLight final
{
public:
	class ULightComponent*                        InLight;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightingRig.AddKickLight
// 0x0008 (0x0008 - 0x0000)
struct BhvrAssetLightingRig_AddKickLight final
{
public:
	class ULightComponent*                        InLight;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightingRig.AddRimLight
// 0x0008 (0x0008 - 0x0000)
struct BhvrAssetLightingRig_AddRimLight final
{
public:
	class ULightComponent*                        InLight;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightingRig.GetDisplayName
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetLightingRig_GetDisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetLightingSystem.SelectLightingRig
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetLightingSystem_SelectLightingRig final
{
public:
	class FString                                 InDisplayName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.ResetPivot
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewCamera_ResetPivot final
{
public:
	bool                                          bAllowCameraLag;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.ResetRotation
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewCamera_ResetRotation final
{
public:
	bool                                          bAllowCameraLag;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.ResetZoom
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewCamera_ResetZoom final
{
public:
	bool                                          bAllowCameraLag;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetAspectRatio
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_SetAspectRatio final
{
public:
	float                                         NewAspectRatio;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetAutoFocusOffset
// 0x0018 (0x0018 - 0x0000)
struct BhvrAssetViewCamera_SetAutoFocusOffset final
{
public:
	struct FVector                                NewFocusTargetOffsetXY;                            // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetBlurAmount
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_SetBlurAmount final
{
public:
	float                                         NewBlurAmount;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetExposureBias
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_SetExposureBias final
{
public:
	float                                         NewExposureBias;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetFieldOfView
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_SetFieldOfView final
{
public:
	float                                         NewFieldOfView;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetRollAngle
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_SetRollAngle final
{
public:
	float                                         NewRollAngle;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetShowAutoFocusTarget
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewCamera_SetShowAutoFocusTarget final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetUseAutoFocus
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewCamera_SetUseAutoFocus final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.SetUseDepthOfField
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewCamera_SetUseDepthOfField final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.ZoomFit
// 0x0068 (0x0068 - 0x0000)
struct BhvrAssetViewCamera_ZoomFit final
{
public:
	struct FVector                                CenterOfMass;                                      // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   Bounds;                                            // 0x0018(0x0038)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Padding;                                           // 0x0050(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.GetAspectRatio
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_GetAspectRatio final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.GetExposureBias
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_GetExposureBias final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.GetFieldOfView
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_GetFieldOfView final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCamera.GetRollAngle
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCamera_GetRollAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.LoadSequences
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_LoadSequences final
{
public:
	TArray<struct FAssetData>                     SequenceAssetDatas;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.RecordSequence
// 0x0018 (0x0018 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_RecordSequence final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelinePrimaryConfig*            Configuration;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.SelectCameraSequence
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_SelectCameraSequence final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.SetIsLooping
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_SetIsLooping final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.SetPlaybackPosition
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_SetPlaybackPosition final
{
public:
	int32                                         NewPlaybackPosition;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.GetIsLooping
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_GetIsLooping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.GetMaxPlaybackPosition
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_GetMaxPlaybackPosition final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.GetPlaybackPosition
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_GetPlaybackPosition final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewCameraSequenceSystem.GetSelectedCameraSequenceName
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewCameraSequenceSystem_GetSelectedCameraSequenceName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewController.CalculateBounds
// 0x0050 (0x0050 - 0x0000)
struct BhvrAssetViewController_CalculateBounds final
{
public:
	struct FVector                                OutCenterOfMass;                                   // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   OutBounds;                                         // 0x0018(0x0038)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewController.GetScreenshotName
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewController_GetScreenshotName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewController.IsLoading
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewController_IsLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewData.GetDisplayName
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewData_GetDisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewData.GetId
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewData_GetId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewData.IsLoading
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewData_IsLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewDataSource.GetSelectedAssetViewData
// 0x0008 (0x0008 - 0x0000)
struct BhvrAssetViewDataSource_GetSelectedAssetViewData final
{
public:
	class UBhvrAssetViewData*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewDataSource.SelectAssetViewData
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewDataSource_SelectAssetViewData final
{
public:
	class FString                                 AssetViewDataId;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewDataSource.GetDisplayName
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewDataSource_GetDisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewDataSource.GetId
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewDataSource_GetId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewDataSource.IsLoading
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewDataSource_IsLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewer.OnSelectedAssetViewDataChanged
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewer_OnSelectedAssetViewDataChanged final
{
public:
	class UBhvrAssetViewData*                     OldAssetViewData;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBhvrAssetViewData*                     NewAssetViewData;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewer.SelectAssetViewDataSource
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewer_SelectAssetViewDataSource final
{
public:
	class FString                                 AssetViewDataSourceId;                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewer.GetSelectedAssetViewController
// 0x0008 (0x0008 - 0x0000)
struct BhvrAssetViewer_GetSelectedAssetViewController final
{
public:
	const class UBhvrAssetViewController*         ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewer.GetSelectedAssetViewDataSource
// 0x0008 (0x0008 - 0x0000)
struct BhvrAssetViewer_GetSelectedAssetViewDataSource final
{
public:
	const class UBhvrAssetViewDataSource*         ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewer.IsLoading
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewer_IsLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewScreenshotSystem.GetBufferVisualizationMaterialNames
// 0x0010 (0x0010 - 0x0000)
struct BhvrAssetViewScreenshotSystem_GetBufferVisualizationMaterialNames final
{
public:
	TArray<class FString>                         InOutBufferVisualizationMaterialNames;             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewScreenshotSystem.CaptureScreen
// 0x0030 (0x0030 - 0x0000)
struct BhvrAssetViewScreenshotSystem_CaptureScreen final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntVector                             ResolutionXY;                                      // 0x0010(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBhvrScreenshotCaptureRegion           CaptureRegion;                                     // 0x001C(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function BhvrAssetViewer.BhvrAssetViewScreenshotSystem.IsBufferVisualizationMaterialEnabled
// 0x0018 (0x0018 - 0x0000)
struct BhvrAssetViewScreenshotSystem_IsBufferVisualizationMaterialEnabled final
{
public:
	class FString                                 BufferVisualizationMaterialName;                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function BhvrAssetViewer.BhvrAssetViewScreenshotSystem.SetBufferVisualizationMaterialEnabled
// 0x0018 (0x0018 - 0x0000)
struct BhvrAssetViewScreenshotSystem_SetBufferVisualizationMaterialEnabled final
{
public:
	class FString                                 BufferVisualizationMaterialName;                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEnabled;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.SetAssetLocation
// 0x0018 (0x0018 - 0x0000)
struct BhvrAssetViewSocket_SetAssetLocation final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.SetAssetRotation
// 0x0018 (0x0018 - 0x0000)
struct BhvrAssetViewSocket_SetAssetRotation final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.SetAutoRotateDirection
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewSocket_SetAutoRotateDirection final
{
public:
	EBhvrAssetViewRotation                        NewDirection;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.SetAutoRotateEnabled
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewSocket_SetAutoRotateEnabled final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.SetAutoRotateSpeed
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewSocket_SetAutoRotateSpeed final
{
public:
	float                                         NewSpeed;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.GetAssetTransform
// 0x0060 (0x0060 - 0x0000)
struct BhvrAssetViewSocket_GetAssetTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.GetAutoRotateDirection
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewSocket_GetAutoRotateDirection final
{
public:
	EBhvrAssetViewRotation                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.GetAutoRotateEnabled
// 0x0001 (0x0001 - 0x0000)
struct BhvrAssetViewSocket_GetAutoRotateEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrAssetViewSocket.GetAutoRotateSpeed
// 0x0004 (0x0004 - 0x0000)
struct BhvrAssetViewSocket_GetAutoRotateSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrWatermarkComponent.GetWatermarkLocation
// 0x0018 (0x0018 - 0x0000)
struct BhvrWatermarkComponent_GetWatermarkLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrWatermarkComponent.SetWatermarkHidden
// 0x0001 (0x0001 - 0x0000)
struct BhvrWatermarkComponent_SetWatermarkHidden final
{
public:
	bool                                          bNewHidden;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrWatermarkComponent.SetWatermarkLocation
// 0x0018 (0x0018 - 0x0000)
struct BhvrWatermarkComponent_SetWatermarkLocation final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BhvrAssetViewer.BhvrWatermarkComponent.SetWatermarkSize
// 0x0008 (0x0008 - 0x0000)
struct BhvrWatermarkComponent_SetWatermarkSize final
{
public:
	double                                        NewSize;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

